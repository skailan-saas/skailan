// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // For connection pooling
  directUrl = env("DIRECT_URL")   // For migrations
}

model User {
  id        String    @id @default(uuid())
  email     String?   @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  tenantId  String?   // Foreign key to Tenant
  tenant    Tenant?   @relation(fields: [tenantId], references: [id])

  // If you are mapping this to Supabase's auth.users,
  // you might not need email, createdAt, updatedAt here directly
  // if you primarily rely on Supabase for auth user management.
  // However, having a separate profiles table linked to auth.users is common.
  // For simplicity here, we'll assume this User model is for your application's user profiles.

  @@map("users") // Maps this model to the "users" table in the public schema
}

model Tenant {
  id          String    @id @default(uuid())
  name        String
  subdomain   String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  users       User[]    // A tenant can have multiple users

  @@map("tenants") // Maps this model to the "tenants" table in the public schema
}
