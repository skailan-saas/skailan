// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Flow that generates a chatbot flow configuration from a natural language prompt.
 *
 * - generateFlowFromPrompt - A function that generates a chatbot flow configuration from a natural language prompt.
 * - GenerateFlowFromPromptInput - The input type for the generateFlowFromPrompt function.
 * - GenerateFlowFromPromptOutput - The return type for the generateFlowFromPrompt function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateFlowFromPromptInputSchema = z.object({
  flowDescription: z
    .string()
    .describe(
      'A natural language description of the desired chatbot flow.'
    ),
});
export type GenerateFlowFromPromptInput = z.infer<typeof GenerateFlowFromPromptInputSchema>;

const GenerateFlowFromPromptOutputSchema = z.object({
  flowConfiguration: z
    .string()
    .describe(
      'A JSON string representing the configuration for the chatbot flow, detailing nodes and transitions.'
    ),
});
export type GenerateFlowFromPromptOutput = z.infer<typeof GenerateFlowFromPromptOutputSchema>;

export async function generateFlowFromPrompt(input: GenerateFlowFromPromptInput): Promise<GenerateFlowFromPromptOutput> {
  return generateFlowFromPromptFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateFlowFromPromptPrompt',
  input: {schema: GenerateFlowFromPromptInputSchema},
  output: {schema: GenerateFlowFromPromptOutputSchema},
  prompt: `You are an expert chatbot flow designer.  You will generate a JSON configuration for a chatbot flow based on the user's description.

Description: {{{flowDescription}}}

Ensure the output is valid JSON that can be parsed by a JSON.parse.
Include a root node.
Include nodes for any user input that is required.
Include example text for the different types of messages the chatbot can send, like carousels, buttons, quick replies, images, and plain text.
Do not include any comments in the JSON.
Validate that the JSON is structured properly before returning it.
`,
});

const generateFlowFromPromptFlow = ai.defineFlow(
  {
    name: 'generateFlowFromPromptFlow',
    inputSchema: GenerateFlowFromPromptInputSchema,
    outputSchema: GenerateFlowFromPromptOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
